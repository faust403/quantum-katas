//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"set_state\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\faust-win\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":13,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"target\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":21},\"Item2\":{\"Line\":1,\"Column\":27}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"state\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":36},\"Item2\":{\"Line\":1,\"Column\":41}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Result\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"set_state\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\faust-win\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":13,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"test_bell_state\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":20,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\faust-win\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":21,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"count\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":32}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"initial\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":46}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Result\"}]]},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"test_bell_state\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\faust-win\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":21,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.QSharpApplication1
{
    [SourceLocation("C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 14, 22)]
    public partial class set_state : Operation<(Qubit,Result), QVoid>, ICallable
    {
        public set_state(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Result)>, IApplyData
        {
            public In((Qubit,Result) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                }
            }
        }

        String ICallable.Name => "set_state";
        String ICallable.FullName => "Quantum.QSharpApplication1.set_state";
        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        public override Func<(Qubit,Result), QVoid> __Body__ => (__in__) =>
        {
            var (target,state) = __in__;
#line 16 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            if ((Microsoft__Quantum__Intrinsic__M.Apply(target) != state))
            {
#line 18 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(target);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __DataIn__((Qubit,Result) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit target, Result state)
        {
            return __m__.Run<set_state, (Qubit,Result), QVoid>((target, state));
        }
    }

    [SourceLocation("C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 22, -1)]
    public partial class test_bell_state : Operation<(Int64,Result), (Int64,Int64,Int64,Int64)>, ICallable
    {
        public test_bell_state(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Result)>, IApplyData
        {
            public In((Int64,Result) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        public class Out : QTuple<(Int64,Int64,Int64,Int64)>, IApplyData
        {
            public Out((Int64,Int64,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "test_bell_state";
        String ICallable.FullName => "Quantum.QSharpApplication1.test_bell_state";
        public static EntryPointInfo<(Int64,Result), (Int64,Int64,Int64,Int64)> Info => new EntryPointInfo<(Int64,Result), (Int64,Int64,Int64,Int64)>(typeof(test_bell_state));
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Result), QVoid> set_state__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<(Int64,Result), (Int64,Int64,Int64,Int64)> __Body__ => (__in__) =>
        {
            var (count,initial) = __in__;
#line 24 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var numOnesQ1 = 0L;
#line 25 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var numOnesQ2 = 0L;
#line hidden
            {
#line 28 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                var (q1,q2) = (Allocate__.Apply(), Allocate__.Apply());
#line hidden
                bool __arg1__ = true;
                try
                {
#line 29 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    foreach (var test in new QRange(1L, count))
#line hidden
                    {
#line 31 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(q1);
#line 32 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(q2);
#line 35 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        var resultQ1 = Microsoft__Quantum__Intrinsic__M.Apply(q1);
#line 36 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        var resultQ2 = Microsoft__Quantum__Intrinsic__M.Apply(q2);
#line 39 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        if ((resultQ1 == Result.One))
                        {
#line 41 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                            numOnesQ1 = (numOnesQ1 + 1L);
                        }

#line 43 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        if ((resultQ2 == Result.One))
                        {
#line 45 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                            numOnesQ2 = (numOnesQ2 + 1L);
                        }
                    }

#line 49 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    set_state__.Apply((q1, Result.Zero));
#line 50 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    set_state__.Apply((q2, Result.Zero));
#line 53 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Message__.Apply("q1:Zero, One q2:Zero, One");
#line 54 "C:\\Users\\faust-win\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    return ((count - numOnesQ1), numOnesQ1, (count - numOnesQ2), numOnesQ2);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q1);
#line hidden
                        Release__.Apply(q2);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.set_state__ = this.__Factory__.Get<ICallable<(Qubit,Result), QVoid>>(typeof(set_state));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__((Int64,Result) data) => new In(data);
        public override IApplyData __DataOut__((Int64,Int64,Int64,Int64) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Int64,Int64,Int64,Int64)> Run(IOperationFactory __m__, Int64 count, Result initial)
        {
            return __m__.Run<test_bell_state, (Int64,Result), (Int64,Int64,Int64,Int64)>((count, initial));
        }
    }
}